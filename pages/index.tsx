import Head from "next/head";
import { FormEvent, useEffect, useRef, useState } from "react";
import ArrowDownSvg from "../components/ArrowDownSvg";
import ArrowUpSvg from "../components/ArrowUpSvg";
import Problem from "../components/Problem";
import SubmissionForm from "../components/SubmissionForm";
import fetcher from "../library/fetcher";

type Run = { text: string; repeated: boolean };

export default function Home() {
	const [report, setReport] = useState<Run[]>([]);

	const [positions, setPositions] = useState<number[]>([]);

	function handleReport(runs: Run[]) {
		setPositions([]);
		setReport(runs);
	}

	function scrollTo(dir: "up" | "down") {
		// alert(dir);
		const currY = window.scrollY;
		let nextY: number;

		if (dir === "up") {
			nextY = positions.find((pos, i) => positions[i + 1] > currY) || currY;
		} else {
			nextY = positions.find((pos) => pos > currY) || currY;
		}

		window.scrollTo({ top: nextY });
	}

	function handleLoadProblem(n: number) {
		setPositions((pre) => [...pre, n]);
	}

	return (
		<div className="w-full h-full">
			<Head>
				<meta name="description" content="Generated by create next app" />
				<meta property="og:title" content="Tonal Distancing" />
				<meta property="og:description" content="Tonal Distancing" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<aside className="flex flex-col items-center m-4">
				<SubmissionForm handleReport={handleReport} />
			</aside>
			<main className="z-10 flex flex-col items-center w-full">
				<div className="max-w-[75ch] text-2xl text-justify">
					{Boolean(report) &&
						report.map((run, i) =>
							run.repeated ? (
								<Problem
									key={run.text + i}
									text={run.text}
									onLoad={handleLoadProblem}
								/>
							) : (
								<span
									className={`my-2 text-black dark:text-drac-white whitespace-pre-line font-serif text-justify inline
										dark:selection:bg-drac-white`}
									key={run.text + i}
								>
									{run.text}
								</span>
							)
						)}
				</div>
			</main>

			<div className="flex flex-col items-center fixed bottom-8 left-8">
				<button
					className="block w-8 h-8 hover:scale-125 transition-transform"
					onClick={() => scrollTo("up")}
				>
					<ArrowUpSvg />
				</button>
				<button
					className="block w-8 h-8 hover:scale-125 transition-transform"
					onClick={() => scrollTo("down")}
				>
					<ArrowDownSvg />
				</button>
			</div>
		</div>
	);
}
